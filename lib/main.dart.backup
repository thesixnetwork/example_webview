import 'package:dio/dio.dart';
import 'package:flutter/material.dart';

import 'example_webview.dart';
import 'package:flutter_inappwebview/flutter_inappwebview.dart';

void main() {
  runApp(const MyApp());
}

class MyChromeSafariBrowser extends ChromeSafariBrowser {
  @override
  void onOpened() {
    print("ChromeSafari browser opened");
  }

  @override
  void onCompletedInitialLoad() {
    print("ChromeSafari browser initial load completed");
  }

  @override
  void onClosed() {
    print("ChromeSafari browser closed");
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: MyHomePage(title: "Example"),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({super.key, required this.title});

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;
  final ChromeSafariBrowser browser = new MyChromeSafariBrowser();

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _url = "";

  void getData() async {
    final dio = Dio();
    final response = await dio.get(
        'https://storage.googleapis.com/techsauce-webview-conf/webview-config.json');
    setState(() {
      _url = response.data['base_url'];
      // _url =  "https://zipeventapp.com/";
    });
  }

  @override
  void initState() {
    super.initState();
    widget.browser.addMenuItem(new ChromeSafariBrowserMenuItem(
        id: 1,
        label: 'Custom item menu 1',
        action: (url, title) {
          print('Custom item menu 1 clicked!');
        }));
    getData();
  }

  @override
  Widget build(BuildContext context) {
    // getData();

    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
                child: const Text('Refresh'),
                onPressed: () {
                  getData();
                  // Navigate to second route when tapped.
                }),
            SizedBox(height: 30),
            const Text(
              'Endpoint',
            ),
            Text(
              '$_url',
              style: Theme.of(context).textTheme.bodySmall,
            ),
            ElevatedButton(
                child: const Text('Open Webview'),
                onPressed: () async {
                  // Navigator.push(
                  //   context,
                  //   MaterialPageRoute(
                  //       builder: (context) => WebViewExample(url: _url)),
                  // );
                  // Navigate to second route when tapped.

                  await widget.browser.open(
                      url: Uri.parse("https://ts.fivenet.sixprotocol.com"),
                      options: ChromeSafariBrowserClassOptions(
                          android: AndroidChromeCustomTabsOptions(
                              shareState: CustomTabsShareState.SHARE_STATE_OFF),
                          ios: IOSSafariOptions(
                            barCollapsingEnabled: true,
                            dismissButtonStyle:IOSSafariDismissButtonStyle.CLOSE,
                            )));
                }),
          ],
        ),
      ),
// This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
